{
  "name": "",
  "tagType": "Provider",
  "tags": [
    {
      "name": "jupyter",
      "typeId": "GitCommands",
      "parameters": {
        "projectName": {
          "dataType": "String",
          "value": "jupyter"
        }
      },
      "tagType": "UdtInstance",
      "tags": [
        {
          "name": "add",
          "tagType": "AtomicTag"
        },
        {
          "name": "status",
          "tagType": "AtomicTag"
        },
        {
          "name": "log",
          "tagType": "AtomicTag"
        },
        {
          "name": "refreshLog",
          "tagType": "AtomicTag"
        }
      ]
    },
    {
      "name": "testUI",
      "typeId": "GitCommands",
      "parameters": {
        "projectName": {
          "dataType": "String",
          "value": "testUI"
        }
      },
      "tagType": "UdtInstance",
      "tags": [
        {
          "name": "log",
          "tagType": "AtomicTag"
        },
        {
          "name": "add",
          "tagType": "AtomicTag"
        },
        {
          "name": "status",
          "tagType": "AtomicTag"
        },
        {
          "name": "refreshLog",
          "tagType": "AtomicTag"
        }
      ]
    },
    {
      "name": "backups",
      "typeId": "GitCommands",
      "parameters": {
        "projectName": {
          "dataType": "String",
          "value": ".backups"
        }
      },
      "tagType": "UdtInstance",
      "tags": [
        {
          "name": "refreshLog",
          "tagType": "AtomicTag"
        },
        {
          "name": "add",
          "tagType": "AtomicTag"
        },
        {
          "name": "status",
          "tagType": "AtomicTag"
        },
        {
          "name": "log",
          "tagType": "AtomicTag"
        }
      ]
    },
    {
      "name": "_InitContainer",
      "typeId": "GitCommands",
      "parameters": {
        "projectName": {
          "dataType": "String",
          "value": "_InitContainer"
        }
      },
      "tagType": "UdtInstance",
      "tags": [
        {
          "name": "refreshLog",
          "tagType": "AtomicTag"
        },
        {
          "name": "add",
          "tagType": "AtomicTag"
        },
        {
          "name": "status",
          "tagType": "AtomicTag"
        },
        {
          "name": "log",
          "tagType": "AtomicTag"
        }
      ]
    },
    {
      "name": "testProj",
      "typeId": "GitCommands",
      "parameters": {
        "projectName": {
          "dataType": "String",
          "value": "testProj"
        }
      },
      "tagType": "UdtInstance",
      "tags": [
        {
          "name": "log",
          "tagType": "AtomicTag"
        },
        {
          "name": "refreshLog",
          "tagType": "AtomicTag"
        },
        {
          "name": "add",
          "tagType": "AtomicTag"
        },
        {
          "name": "status",
          "tagType": "AtomicTag"
        }
      ]
    },
    {
      "name": "Global",
      "typeId": "GitCommands",
      "parameters": {
        "projectName": {
          "dataType": "String",
          "value": "Global"
        }
      },
      "tagType": "UdtInstance",
      "tags": [
        {
          "name": "refreshLog",
          "tagType": "AtomicTag"
        },
        {
          "name": "add",
          "tagType": "AtomicTag"
        },
        {
          "name": "status",
          "tagType": "AtomicTag"
        },
        {
          "name": "log",
          "tagType": "AtomicTag"
        }
      ]
    },
    {
      "name": "_types_",
      "tagType": "Folder",
      "tags": [
        {
          "name": "RootCommands",
          "typeId": "GitCommands",
          "tagType": "UdtType",
          "tags": [
            {
              "name": "refreshLog",
              "tagType": "AtomicTag"
            },
            {
              "valueSource": "memory",
              "eventScripts": [
                {
                  "eventid": "valueChanged",
                  "script": "\tif currentValue.value:\n\t\tvcs.git.exportTags()\n\t\tsystem.tag.writeBlocking([\"[.]exportTags\", \"[.]status\"], [False,True])"
                }
              ],
              "dataType": "Boolean",
              "name": "exportTags",
              "value": false,
              "tagType": "AtomicTag"
            },
            {
              "valueSource": "memory",
              "eventScripts": [
                {
                  "eventid": "valueChanged",
                  "script": "\tif currentValue.value:\n\t\tlogString \u003d vcs.git.setCommitLog()\n\t\tsystem.tag.writeBlocking([\"[.]setCommitLog\", \"[.]refreshCommitLog\"], [False, True])"
                }
              ],
              "dataType": "Boolean",
              "name": "setCommitLog",
              "value": false,
              "tagType": "AtomicTag"
            },
            {
              "valueSource": "memory",
              "eventScripts": [
                {
                  "eventid": "valueChanged",
                  "script": "\tif currentValue.value:\n\t\tvcs.git.branch()\n\t\tsystem.tag.writeBlocking([\"[.]branch\",\"[.]refreshLog\"], [False,True])"
                }
              ],
              "dataType": "Boolean",
              "name": "branch",
              "value": false,
              "tagType": "AtomicTag"
            },
            {
              "valueSource": "memory",
              "eventScripts": [
                {
                  "eventid": "valueChanged",
                  "script": "\tif currentValue.value:\n\t\tcommitMessage \u003d system.tag.readBlocking(\"[.]commitMessage\")[0].value\n\t\tvcs.git.commitTest(commitMessage)\n\t\tsystem.tag.writeBlocking(\n\t\t\t[\"[.]commit\", \"[.]commitMessage\", \"[.]setCommitLog\", \"[.]status\"], \n\t\t\t[False, \"\", True, True]\n\t\t)"
                }
              ],
              "dataType": "Boolean",
              "name": "commit",
              "value": false,
              "tagType": "AtomicTag"
            },
            {
              "valueSource": "memory",
              "dataType": "String",
              "name": "commitLog",
              "tagType": "AtomicTag"
            },
            {
              "name": "log",
              "tagType": "AtomicTag"
            },
            {
              "name": "add",
              "tagType": "AtomicTag"
            },
            {
              "name": "status",
              "tagType": "AtomicTag"
            },
            {
              "valueSource": "memory",
              "eventScripts": [
                {
                  "eventid": "valueChanged",
                  "script": "\tif currentValue.value:\n\t\tvcs.git.push()\n\t\tsystem.tag.writeBlocking([\"[.]push\",\"[.]status\"], [False,True])"
                }
              ],
              "dataType": "Boolean",
              "name": "push",
              "value": false,
              "tagType": "AtomicTag"
            },
            {
              "valueSource": "memory",
              "eventScripts": [
                {
                  "eventid": "valueChanged",
                  "script": "\tif currentValue.value:\n\t\tlogString \u003d vcs.git.getCommitLog()\n\t\tsystem.tag.writeBlocking([\"[.]commitLog\", \"[.]refreshCommitLog\"], [logString, False])"
                }
              ],
              "dataType": "Boolean",
              "name": "refreshCommitLog",
              "value": false,
              "tagType": "AtomicTag"
            },
            {
              "valueSource": "memory",
              "dataType": "String",
              "name": "commitMessage",
              "value": "",
              "tagType": "AtomicTag"
            }
          ]
        },
        {
          "name": "GitCommands",
          "parameters": {
            "projectName": {
              "dataType": "String"
            }
          },
          "tagType": "UdtType",
          "tags": [
            {
              "valueSource": "memory",
              "eventScripts": [
                {
                  "eventid": "valueChanged",
                  "script": "\tif currentValue.value:\n\t\tprojectName \u003d system.tag.readBlocking(\"[.]Parameters.projectName\")[0].value\n\t\tlogString \u003d vcs.git.getLog(projectName)\n\t\tsystem.tag.writeBlocking([\"[.]log\", \"[.]refreshLog\"], [logString, False])"
                }
              ],
              "dataType": "Boolean",
              "name": "refreshLog",
              "value": false,
              "tagType": "AtomicTag"
            },
            {
              "valueSource": "memory",
              "dataType": "String",
              "name": "log",
              "tagType": "AtomicTag"
            },
            {
              "valueSource": "memory",
              "eventScripts": [
                {
                  "eventid": "valueChanged",
                  "script": "\tif currentValue.value:\n\t\tprojectName \u003d system.tag.readBlocking(\"[.]Parameters.projectName\")[0].value\n\t\tvcs.git.status(projectName)\n\t\tsystem.tag.writeBlocking([\"[.]status\", \"[.]refreshLog\"], [False, True])"
                }
              ],
              "dataType": "Boolean",
              "name": "status",
              "value": false,
              "tagType": "AtomicTag"
            },
            {
              "valueSource": "memory",
              "eventScripts": [
                {
                  "eventid": "valueChanged",
                  "script": "\tif currentValue.value:\n\t\tprojectName \u003d system.tag.readBlocking(\"[.]Parameters.projectName\")[0].value\n\t\tvcs.git.add(projectName)\n\t\t# Will requery the status once the folder has been added.\n\t\tsystem.tag.writeBlocking([\"[.]add\", \"[.]status\"], [False, True])"
                }
              ],
              "dataType": "Boolean",
              "name": "add",
              "value": false,
              "tagType": "AtomicTag"
            }
          ]
        }
      ]
    },
    {
      "name": "__root__",
      "typeId": "RootCommands",
      "parameters": {
        "projectName": {
          "dataType": "String",
          "value": "."
        }
      },
      "tagType": "UdtInstance",
      "tags": [
        {
          "name": "commitMessage",
          "tagType": "AtomicTag"
        },
        {
          "value": "On branch feature\nYour branch is up to date with \u0027origin/feature\u0027.\n\nChanges not staged for commit:\n  (use \"git add \u003cfile\u003e...\" to update what will be committed)\n  (use \"git restore \u003cfile\u003e...\" to discard changes in working directory)\n\tmodified:   .tags/git/tags.json\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\n",
          "name": "log",
          "tagType": "AtomicTag"
        },
        {
          "name": "commitLog",
          "tagType": "AtomicTag"
        },
        {
          "name": "add",
          "tagType": "AtomicTag"
        },
        {
          "value": true,
          "name": "exportTags",
          "tagType": "AtomicTag"
        },
        {
          "name": "commit",
          "tagType": "AtomicTag"
        },
        {
          "name": "setCommitLog",
          "tagType": "AtomicTag"
        },
        {
          "name": "branch",
          "tagType": "AtomicTag"
        },
        {
          "value": false,
          "name": "refreshLog",
          "tagType": "AtomicTag"
        },
        {
          "name": "refreshCommitLog",
          "tagType": "AtomicTag"
        },
        {
          "name": "push",
          "tagType": "AtomicTag"
        },
        {
          "value": false,
          "name": "status",
          "tagType": "AtomicTag"
        }
      ]
    },
    {
      "name": "scripts",
      "typeId": "GitCommands",
      "parameters": {
        "projectName": {
          "dataType": "String",
          "value": ".scripts"
        }
      },
      "tagType": "UdtInstance",
      "tags": [
        {
          "name": "refreshLog",
          "tagType": "AtomicTag"
        },
        {
          "name": "add",
          "tagType": "AtomicTag"
        },
        {
          "name": "status",
          "tagType": "AtomicTag"
        },
        {
          "name": "log",
          "tagType": "AtomicTag"
        }
      ]
    },
    {
      "name": "root",
      "typeId": "GitCommands",
      "parameters": {
        "projectName": {
          "dataType": "String",
          "value": "."
        }
      },
      "tagType": "UdtInstance",
      "tags": [
        {
          "name": "status",
          "tagType": "AtomicTag"
        },
        {
          "value": "On branch feature\nYour branch is up to date with \u0027origin/feature\u0027.\n\nChanges not staged for commit:\n  (use \"git add \u003cfile\u003e...\" to update what will be committed)\n  (use \"git restore \u003cfile\u003e...\" to discard changes in working directory)\n\tmodified:   .scripts/git-status.sh\n\nUntracked files:\n  (use \"git add \u003cfile\u003e...\" to include in what will be committed)\n\tgit.log\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\n",
          "name": "log",
          "tagType": "AtomicTag"
        },
        {
          "name": "add",
          "tagType": "AtomicTag"
        },
        {
          "value": false,
          "name": "refreshLog",
          "tagType": "AtomicTag"
        }
      ]
    },
    {
      "name": "tags",
      "typeId": "GitCommands",
      "parameters": {
        "projectName": {
          "dataType": "String",
          "value": ".tags"
        }
      },
      "tagType": "UdtInstance",
      "tags": [
        {
          "name": "log",
          "tagType": "AtomicTag"
        },
        {
          "name": "add",
          "tagType": "AtomicTag"
        },
        {
          "name": "status",
          "tagType": "AtomicTag"
        },
        {
          "name": "refreshLog",
          "tagType": "AtomicTag"
        }
      ]
    }
  ]
}