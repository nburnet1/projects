{
  "name": "",
  "tagType": "Provider",
  "tags": [
    {
      "name": "Global",
      "typeId": "GitCommands",
      "parameters": {
        "projectName": {
          "dataType": "String",
          "value": "Global"
        }
      },
      "tagType": "UdtInstance",
      "tags": [
        {
          "value": "On branch feature\nYour branch is up to date with \u0027origin/feature\u0027.\n\nnothing to commit, working tree clean\n",
          "name": "log",
          "tagType": "AtomicTag"
        },
        {
          "value": false,
          "name": "refreshLog",
          "tagType": "AtomicTag"
        },
        {
          "value": false,
          "name": "add",
          "tagType": "AtomicTag"
        },
        {
          "value": false,
          "name": "status",
          "tagType": "AtomicTag"
        }
      ]
    },
    {
      "name": "testUI",
      "typeId": "GitCommands",
      "parameters": {
        "projectName": {
          "dataType": "String",
          "value": "testUI"
        }
      },
      "tagType": "UdtInstance",
      "tags": [
        {
          "value": "On branch feature\nYour branch is up to date with \u0027origin/feature\u0027.\n\nChanges not staged for commit:\n  (use \"git add \u003cfile\u003e...\" to update what will be committed)\n  (use \"git restore \u003cfile\u003e...\" to discard changes in working directory)\n\tmodified:   com.inductiveautomation.perspective/page-config/config.json\n\tmodified:   com.inductiveautomation.perspective/page-config/resource.json\n\tmodified:   com.inductiveautomation.perspective/session-props/props.json\n\tmodified:   com.inductiveautomation.perspective/session-props/resource.json\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\n",
          "name": "log",
          "tagType": "AtomicTag"
        },
        {
          "name": "add",
          "tagType": "AtomicTag"
        },
        {
          "value": false,
          "name": "refreshLog",
          "tagType": "AtomicTag"
        },
        {
          "value": false,
          "name": "status",
          "tagType": "AtomicTag"
        }
      ]
    },
    {
      "name": "tags",
      "typeId": "GitCommands",
      "parameters": {
        "projectName": {
          "dataType": "String",
          "value": ".tags"
        }
      },
      "tagType": "UdtInstance",
      "tags": [
        {
          "value": false,
          "name": "refreshLog",
          "tagType": "AtomicTag"
        },
        {
          "value": "On branch feature\nYour branch is up to date with \u0027origin/feature\u0027.\n\nnothing to commit, working tree clean\n",
          "name": "log",
          "tagType": "AtomicTag"
        },
        {
          "value": false,
          "name": "status",
          "tagType": "AtomicTag"
        },
        {
          "value": false,
          "name": "add",
          "tagType": "AtomicTag"
        }
      ]
    },
    {
      "name": "jupyter",
      "typeId": "GitCommands",
      "parameters": {
        "projectName": {
          "dataType": "String",
          "value": "jupyter"
        }
      },
      "tagType": "UdtInstance",
      "tags": [
        {
          "name": "status",
          "tagType": "AtomicTag"
        },
        {
          "name": "refreshLog",
          "tagType": "AtomicTag"
        },
        {
          "name": "add",
          "tagType": "AtomicTag"
        },
        {
          "name": "log",
          "tagType": "AtomicTag"
        }
      ]
    },
    {
      "name": "backups",
      "typeId": "GitCommands",
      "parameters": {
        "projectName": {
          "dataType": "String",
          "value": ".backups"
        }
      },
      "tagType": "UdtInstance",
      "tags": [
        {
          "value": false,
          "name": "refreshLog",
          "tagType": "AtomicTag"
        },
        {
          "value": false,
          "name": "status",
          "tagType": "AtomicTag"
        },
        {
          "value": "On branch feature\nYour branch is up to date with \u0027origin/feature\u0027.\n\nnothing to commit, working tree clean\n",
          "name": "log",
          "tagType": "AtomicTag"
        },
        {
          "name": "add",
          "tagType": "AtomicTag"
        }
      ]
    },
    {
      "name": "testProj",
      "typeId": "GitCommands",
      "parameters": {
        "projectName": {
          "dataType": "String",
          "value": "testProj"
        }
      },
      "tagType": "UdtInstance",
      "tags": [
        {
          "name": "refreshLog",
          "tagType": "AtomicTag"
        },
        {
          "name": "add",
          "tagType": "AtomicTag"
        },
        {
          "name": "log",
          "tagType": "AtomicTag"
        },
        {
          "name": "status",
          "tagType": "AtomicTag"
        }
      ]
    },
    {
      "name": "_InitContainer",
      "typeId": "GitCommands",
      "parameters": {
        "projectName": {
          "dataType": "String",
          "value": "_InitContainer"
        }
      },
      "tagType": "UdtInstance",
      "tags": [
        {
          "name": "add",
          "tagType": "AtomicTag"
        },
        {
          "value": false,
          "name": "status",
          "tagType": "AtomicTag"
        },
        {
          "value": false,
          "name": "refreshLog",
          "tagType": "AtomicTag"
        },
        {
          "value": "On branch feature\nYour branch is up to date with \u0027origin/feature\u0027.\n\nnothing to commit, working tree clean\n",
          "name": "log",
          "tagType": "AtomicTag"
        }
      ]
    },
    {
      "name": "scripts",
      "typeId": "GitCommands",
      "parameters": {
        "projectName": {
          "dataType": "String",
          "value": ".scripts"
        }
      },
      "tagType": "UdtInstance",
      "tags": [
        {
          "name": "add",
          "tagType": "AtomicTag"
        },
        {
          "value": false,
          "name": "status",
          "tagType": "AtomicTag"
        },
        {
          "value": false,
          "name": "refreshLog",
          "tagType": "AtomicTag"
        },
        {
          "value": "On branch feature\nYour branch is up to date with \u0027origin/feature\u0027.\n\nnothing to commit, working tree clean\n",
          "name": "log",
          "tagType": "AtomicTag"
        }
      ]
    },
    {
      "name": "__root__",
      "typeId": "RootCommands",
      "parameters": {
        "projectName": {
          "dataType": "String",
          "value": "."
        }
      },
      "tagType": "UdtInstance",
      "tags": [
        {
          "value": "* commit eb0c01058633ef071dc5474704f1f84cd6a7a000\n| Author: nburnet1 \u003cnoah.burnette@intellicintegration.com\u003e\n| Date:   Tue Mar 26 13:27:58 2024 -0400\n| \n|     Testing some more\n| \n* commit d31dcb19b4b702f849566040e184bbf8beec696e\n| Author: nburnet1 \u003cnoah.burnette@intellicintegration.com\u003e\n| Date:   Tue Mar 26 13:22:23 2024 -0400\n| \n|     Testing some more\n| \n* commit 92fd8052610c948aba3bcdbf8fc6d6c5854b7805\n| Author: nburnet1 \u003cnoah.burnette@intellicintegration.com\u003e\n| Date:   Tue Mar 26 13:20:06 2024 -0400\n| \n|     continuing to test\n| \n* commit 5d55012512d0e9dd88c684f9b2e1bbd8ffa551e2\n| Author: nburnet1 \u003cnoah.burnette@intellicintegration.com\u003e\n| Date:   Tue Mar 26 13:06:16 2024 -0400\n| \n|     Testing screen\n| \n* commit f45a887891e1eb7dffbfe034e1fc3659060be9df\n| Author: nburnet1 \u003cnoah.burnette@intellicintegration.com\u003e\n| Date:   Tue Mar 26 10:27:04 2024 -0400\n| \n|     Modified push member\n| \n* commit bcaf6df2970478d075412a56888120fb3a1b511c\n| Author: nburnet1 \u003cnoah.burnette@intellicintegration.com\u003e\n| Date:   Tue Mar 26 10:23:25 2024 -0400\n| \n|     modifying scripts\n| \n* commit cd51fccfb0a7755c2e37553af302523e35403ffb\n| Author: nburnet1 \u003cnoah.burnette@intellicintegration.com\u003e\n| Date:   Tue Mar 26 10:11:41 2024 -0400\n| \n|     testing\n| \n* commit 228fffc297e8fd8fcbf816eca9fb9af436319439\n| Author: Noah Burnette \u003c80188246+nburnet1@users.noreply.github.com\u003e\n| Date:   Tue Mar 26 10:09:41 2024 -0400\n| \n|     Update git-commit.sh\n| \n* commit cb8b89c3b21cbeb1a8624c529ada9234db5f6437\n| Author: Noah Burnette \u003c80188246+nburnet1@users.noreply.github.com\u003e\n| Date:   Tue Mar 26 10:09:28 2024 -0400\n| \n|     Update git-push.sh\n| \n* commit f954c8d60a453bb3e4d4c6c2dbea4727c966cdea\n| Author: nburnet1 \u003cnoah.burnette@intellicintegration.com\u003e\n| Date:   Tue Mar 26 10:06:04 2024 -0400\n| \n|     modified tags\n| \n* commit 949c54efc16932f9684a04223d3eab1ee3fb9ee9\n| Author: nburnet1 \u003cnoah.burnette@intellicintegration.com\u003e\n| Date:   Tue Mar 26 09:58:49 2024 -0400\n| \n|     testing git push\n| \n* commit 6892b26598297512ee727b1f9e05b2299dcdf2ae\n| Author: nburnet1 \u003cnoah.burnette@intellicintegration.com\u003e\n| Date:   Tue Mar 26 09:52:51 2024 -0400\n| \n|     remove auto commit from projects\n",
          "name": "commitLog",
          "tagType": "AtomicTag"
        },
        {
          "value": false,
          "name": "branch",
          "tagType": "AtomicTag"
        },
        {
          "value": "On branch feature\nYour branch is up to date with \u0027origin/feature\u0027.\n\nChanges not staged for commit:\n  (use \"git add \u003cfile\u003e...\" to update what will be committed)\n  (use \"git restore \u003cfile\u003e...\" to discard changes in working directory)\n\tmodified:   Global/com.inductiveautomation.perspective/views/git/resource.json\n\tmodified:   Global/com.inductiveautomation.perspective/views/git/thumbnail.png\n\tmodified:   Global/com.inductiveautomation.perspective/views/git/view.json\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\n",
          "name": "log",
          "tagType": "AtomicTag"
        },
        {
          "value": "",
          "name": "commitMessage",
          "tagType": "AtomicTag"
        },
        {
          "value": false,
          "name": "push",
          "tagType": "AtomicTag"
        },
        {
          "value": true,
          "name": "exportTags",
          "tagType": "AtomicTag"
        },
        {
          "value": false,
          "name": "status",
          "tagType": "AtomicTag"
        },
        {
          "value": false,
          "name": "add",
          "tagType": "AtomicTag"
        },
        {
          "value": false,
          "name": "refreshCommitLog",
          "tagType": "AtomicTag"
        },
        {
          "value": false,
          "name": "commit",
          "tagType": "AtomicTag"
        },
        {
          "value": false,
          "name": "setCommitLog",
          "tagType": "AtomicTag"
        },
        {
          "value": false,
          "name": "refreshLog",
          "tagType": "AtomicTag"
        }
      ]
    },
    {
      "name": "_types_",
      "tagType": "Folder",
      "tags": [
        {
          "name": "GitCommands",
          "parameters": {
            "projectName": {
              "dataType": "String"
            }
          },
          "tagType": "UdtType",
          "tags": [
            {
              "valueSource": "memory",
              "eventScripts": [
                {
                  "eventid": "valueChanged",
                  "script": "\tif currentValue.value:\n\t\tprojectName \u003d system.tag.readBlocking(\"[.]Parameters.projectName\")[0].value\n\t\tlogString \u003d vcs.git.getLog(projectName)\n\t\tsystem.tag.writeBlocking([\"[.]log\", \"[.]refreshLog\"], [logString, False])"
                }
              ],
              "dataType": "Boolean",
              "name": "refreshLog",
              "value": false,
              "tagType": "AtomicTag"
            },
            {
              "valueSource": "memory",
              "dataType": "String",
              "name": "log",
              "tagType": "AtomicTag"
            },
            {
              "valueSource": "memory",
              "eventScripts": [
                {
                  "eventid": "valueChanged",
                  "script": "\tif currentValue.value:\n\t\tprojectName \u003d system.tag.readBlocking(\"[.]Parameters.projectName\")[0].value\n\t\tvcs.git.status(projectName)\n\t\tsystem.tag.writeBlocking([\"[.]status\", \"[.]refreshLog\"], [False, True])"
                }
              ],
              "dataType": "Boolean",
              "name": "status",
              "value": false,
              "tagType": "AtomicTag"
            },
            {
              "valueSource": "memory",
              "eventScripts": [
                {
                  "eventid": "valueChanged",
                  "script": "\tif currentValue.value:\n\t\tprojectName \u003d system.tag.readBlocking(\"[.]Parameters.projectName\")[0].value\n\t\tvcs.git.add(projectName)\n\t\t# Will requery the status once the folder has been added.\n\t\tsystem.tag.writeBlocking([\"[.]add\", \"[.]status\"], [False, True])"
                }
              ],
              "dataType": "Boolean",
              "name": "add",
              "value": false,
              "tagType": "AtomicTag"
            }
          ]
        },
        {
          "name": "RootCommands",
          "typeId": "GitCommands",
          "tagType": "UdtType",
          "tags": [
            {
              "name": "log",
              "tagType": "AtomicTag"
            },
            {
              "valueSource": "memory",
              "eventScripts": [
                {
                  "eventid": "valueChanged",
                  "script": "\tif currentValue.value:\n\t\tlogString \u003d vcs.git.setCommitLog()\n\t\tsystem.tag.writeBlocking([\"[.]setCommitLog\", \"[.]refreshCommitLog\"], [False, True])"
                }
              ],
              "dataType": "Boolean",
              "name": "setCommitLog",
              "value": false,
              "tagType": "AtomicTag"
            },
            {
              "name": "status",
              "tagType": "AtomicTag"
            },
            {
              "valueSource": "memory",
              "dataType": "String",
              "name": "commitLog",
              "tagType": "AtomicTag"
            },
            {
              "valueSource": "memory",
              "eventScripts": [
                {
                  "eventid": "valueChanged",
                  "script": "\tif currentValue.value:\n\t\tcommitMessage \u003d system.tag.readBlocking(\"[.]commitMessage\")[0].value\n\t\tvcs.git.commitTest(commitMessage)\n\t\tsystem.tag.writeBlocking(\n\t\t\t[\"[.]commit\", \"[.]commitMessage\", \"[.]setCommitLog\", \"[.]status\"], \n\t\t\t[False, \"\", True, True]\n\t\t)"
                }
              ],
              "dataType": "Boolean",
              "name": "commit",
              "value": false,
              "tagType": "AtomicTag"
            },
            {
              "valueSource": "memory",
              "dataType": "String",
              "name": "commitMessage",
              "value": "",
              "tagType": "AtomicTag"
            },
            {
              "name": "add",
              "tagType": "AtomicTag"
            },
            {
              "name": "refreshLog",
              "tagType": "AtomicTag"
            },
            {
              "valueSource": "memory",
              "eventScripts": [
                {
                  "eventid": "valueChanged",
                  "script": "\tif currentValue.value:\n\t\tvcs.git.branch()\n\t\tsystem.tag.writeBlocking([\"[.]branch\",\"[.]refreshLog\"], [False,True])"
                }
              ],
              "dataType": "Boolean",
              "name": "branch",
              "value": false,
              "tagType": "AtomicTag"
            },
            {
              "valueSource": "memory",
              "eventScripts": [
                {
                  "eventid": "valueChanged",
                  "script": "\tif currentValue.value:\n\t\tvcs.git.exportTags()\n\t\tsystem.tag.writeBlocking([\"[.]exportTags\", \"[.]status\"], [False,True])"
                }
              ],
              "dataType": "Boolean",
              "name": "exportTags",
              "value": false,
              "tagType": "AtomicTag"
            },
            {
              "valueSource": "memory",
              "eventScripts": [
                {
                  "eventid": "valueChanged",
                  "script": "\tif currentValue.value:\n\t\tlogString \u003d vcs.git.getCommitLog()\n\t\tsystem.tag.writeBlocking([\"[.]commitLog\", \"[.]refreshCommitLog\"], [logString, False])"
                }
              ],
              "dataType": "Boolean",
              "name": "refreshCommitLog",
              "value": false,
              "tagType": "AtomicTag"
            },
            {
              "valueSource": "memory",
              "eventScripts": [
                {
                  "eventid": "valueChanged",
                  "script": "\tif currentValue.value:\n\t\tvcs.git.push()\n\t\tsystem.tag.writeBlocking([\"[.]push\",\"[.]status\"], [False,True])"
                }
              ],
              "dataType": "Boolean",
              "name": "push",
              "value": false,
              "tagType": "AtomicTag"
            }
          ]
        }
      ]
    },
    {
      "name": "root",
      "typeId": "GitCommands",
      "parameters": {
        "projectName": {
          "dataType": "String",
          "value": "."
        }
      },
      "tagType": "UdtInstance",
      "tags": [
        {
          "name": "status",
          "tagType": "AtomicTag"
        },
        {
          "value": "On branch feature\nYour branch is up to date with \u0027origin/feature\u0027.\n\nChanges not staged for commit:\n  (use \"git add \u003cfile\u003e...\" to update what will be committed)\n  (use \"git restore \u003cfile\u003e...\" to discard changes in working directory)\n\tmodified:   .scripts/git-status.sh\n\nUntracked files:\n  (use \"git add \u003cfile\u003e...\" to include in what will be committed)\n\tgit.log\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\n",
          "name": "log",
          "tagType": "AtomicTag"
        },
        {
          "name": "add",
          "tagType": "AtomicTag"
        },
        {
          "value": false,
          "name": "refreshLog",
          "tagType": "AtomicTag"
        }
      ]
    }
  ]
}